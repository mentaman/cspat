\begin{thebibliography}{10}

\bibitem{structural}
S.~Bardin and P.~Herrmann.
\newblock {Structural Testing of Executables.}
\newblock In {\em ICST}, 2008.

\bibitem{counter}
Dirk Beyer, Adam~J. Chlipala, and Rupak Majumdar.
\newblock Generating tests from counterexamples.
\newblock In {\em ICSE '04: Proceedings of the 26th International Conference on
  Software Engineering}, pages 326--335, Washington, DC, USA, 2004. IEEE
  Computer Society.

\bibitem{pathfeasibility}
Nikolaj Bj{\o}rner, Nikolai Tillmann, and Andrei Voronkov.
\newblock Path feasibility analysis for string-manipulating programs.
\newblock In {\em TACAS '09: Proceedings of the 15th International Conference
  on Tools and Algorithms for the Construction and Analysis of Systems}, pages
  307--321, Berlin, Heidelberg, 2009. Springer-Verlag.

\bibitem{select}
Robert~S. Boyer, Bernard Elspas, and Karl~N. Levitt.
\newblock {SELECT--a formal system for testing and debugging programs by
  symbolic execution.}
\newblock In {\em ICRS}, 1975.

\bibitem{mixed}
Cristian Cadar and Dawson Engler.
\newblock {Execution Generated Test Cases: How to Make Systems Code Crash
  Itself}.
\newblock In {\em SPIN}, 2005.

\bibitem{exe}
Cristian Cadar, Vijay Ganesh, Peter~M. Pawlowski, David~L. Dill, and Dawson~R.
  Engler.
\newblock Exe: automatically generating inputs of death.
\newblock In {\em CCS}, 2006.

\bibitem{system}
L.~A. Clarke.
\newblock A system to generate test data and symbolically execute programs.
\newblock {\em IEEE Trans. Softw. Eng.}, 2(3):215--222, 1976.

\bibitem{yagg}
David Coppit and Jiexin Lian.
\newblock yagg: an easy-to-use generator for structured test inputs.
\newblock In {\em ASE '05: Proceedings of the 20th IEEE/ACM international
  Conference on Automated software engineering}, pages 356--359, New York, NY,
  USA, 2005. ACM.

\bibitem{database}
Michael Emmi, Rupak Majumdar, and Koushik Sen.
\newblock Dynamic test input generation for database applications.
\newblock In {\em ISSTA '07: Proceedings of the 2007 international symposium on
  Software testing and analysis}, pages 151--162, New York, NY, USA, 2007. ACM.

\bibitem{injection}
Xiang Fu, Xin Lu, Boris Peltsverger, Shijun Chen, Kai Qian, and Lixin Tao.
\newblock A static analysis framework for detecting sql injection
  vulnerabilities.
\newblock In {\em COMPSAC '07: Proceedings of the 31st Annual International
  Computer Software and Applications Conference}, pages 87--96, Washington, DC,
  USA, 2007. IEEE Computer Society.

\bibitem{STP}
Vijay Ganesh.
\newblock {\em Decision procedures for bit-vectors, arrays and integers}.
\newblock PhD thesis, Stanford, CA, USA, 2007.
\newblock Adviser-Dill, David L.

\bibitem{grammar}
P.~Godefroid, A.~Kiezun, and M.~Levin.
\newblock Grammar-based whitebox fuzzing.
\newblock {\em SIGPLAN Not.}, pages 206--215, 2008.

\bibitem{compositional}
Patrice Godefroid.
\newblock {Compositional Dynamic Test Generation}.
\newblock In {\em POPL}, 2007.

\bibitem{dart}
Patrice Godefroid, Nils Klarlund, and Koushik Sen.
\newblock Dart: directed automated random testing.
\newblock In {\em PLDI}, pages 213--223, 2005.

\bibitem{random}
Patrice Godefroid, Nils Klarlund, and Koushik Sen.
\newblock Dart: directed automated random testing.
\newblock {\em SIGPLAN Not.}, 40(6):213--223, 2005.

\bibitem{theorybook}
J.~Hopcroft and J.~Ullman.
\newblock {\em Introduction to automata theory languages and computation.}
\newblock Addison-Wesley Series in Computer Science, 1979.

\bibitem{hampi}
Adam Kiezun, Vijay Ganesh, Philip~J. Guo, Pieter Hooimeijer, and Michael~D.
  Ernst.
\newblock Hampi: a solver for string constraints.
\newblock In {\em ISSTA '09: Proceedings of the eighteenth international
  symposium on Software testing and analysis}, pages 105--116, New York, NY,
  USA, 2009. ACM.

\bibitem{symbolic}
James~C. King.
\newblock Symbolic execution and program testing.
\newblock {\em Commun. ACM}, 19(7):385--394, 1976.

\bibitem{CESE}
Rupak Majumdar and Ru-Gang Xu.
\newblock Directed test generation using symbolic grammars.
\newblock In {\em ESEC-FSE companion '07: The 6th Joint Meeting on European
  software engineering conference and the ACM SIGSOFT symposium on the
  foundations of software engineering}, pages 553--556, New York, NY, USA,
  2007. ACM.

\bibitem{fuzzing}
M.~Y.~Levin P.~Godefroid and D.Molnar.
\newblock {Automated Whitebox Fuzz Testing.}
\newblock In {\em NDSS}, 2008.

\bibitem{extenjpf}
C.~S.~Pasareanu S.~Anand and W.~Visser.
\newblock {JPF-SE: A Symbolic Execution Extension to Java PathFinder.}
\newblock In {\em TACAS}, 2007.

\bibitem{cute}
Koushik Sen, Darko Marinov, and Gul Agha.
\newblock Cute: a concolic unit testing engine for c.
\newblock In {\em ESEC/FSE}, 2005.

\bibitem{stringanalysis}
Daryl Shannon, Sukant Hajra, Alison Lee, Daiqian Zhan, and Sarfraz Khurshid.
\newblock Abstracting symbolic execution with string analysis.
\newblock In {\em TAICPART-MUTATION '07: Proceedings of the Testing: Academic
  and Industrial Conference Practice and Research Techniques - MUTATION}, pages
  13--22, Washington, DC, USA, 2007. IEEE Computer Society.

\bibitem{pex}
N.~Tillmann and J.~de~Halleux.
\newblock {Pex-White Box Test Generation for .NET.}
\newblock In {\em TAP}, 2008.

\bibitem{Test}
Willem Visser, Corina~S. P\v{a}s\v{a}reanu, and Sarfraz Khurshid.
\newblock Test input generation with java pathfinder.
\newblock {\em SIGSOFT Softw. Eng. Notes}, 29(4):97--107, 2004.

\bibitem{webapp}
Gary Wassermann, Dachuan Yu, Ajay Chander, Dinakar Dhurjati, Hiroshi Inamura,
  and Zhendong Su.
\newblock Dynamic test input generation for web applications.
\newblock In {\em ISSTA '08: Proceedings of the 2008 international symposium on
  Software testing and analysis}, pages 249--260, New York, NY, USA, 2008. ACM.

\bibitem{fitness}
Tao Xie, Nikolai Tillmann, Peli de~Halleux, and Wolfram Schulte.
\newblock Fitness-guided path exploration in dynamic symbolic execution.
\newblock In {\em DSN}, June-July 2009.

\end{thebibliography}
